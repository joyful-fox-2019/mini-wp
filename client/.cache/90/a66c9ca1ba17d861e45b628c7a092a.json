{"id":"node_modules/html-truncate/lib/truncate.js","dependencies":[{"name":"/home/sigit/Documents/Hacktiv8/4.phase2-ulang/portofolio/mini-wp/client/package.json","includedInParent":true,"mtime":1573408536358},{"name":"/home/sigit/Documents/Hacktiv8/4.phase2-ulang/portofolio/mini-wp/client/node_modules/html-truncate/package.json","includedInParent":true,"mtime":1573294236548}],"generated":{"js":"/**\n * Truncate HTML string and keep tag safe.\n *\n * @method truncate\n * @param {String} string string needs to be truncated\n * @param {Number} maxLength length of truncated string\n * @param {Object} options (optional)\n * @param {Boolean} [options.keepImageTag] flag to specify if keep image tag, false by default\n * @param {Boolean} [options.truncateLastWord] truncates last word, true by default\n * @param {Number} [options.slop] tolerance when options.truncateLastWord is false before we give up and just truncate at the maxLength position, 10 by default (but not greater than maxLength)\n * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default\n * @return {String} truncated string\n */\nfunction truncate(string, maxLength, options) {\n    var EMPTY_OBJECT = {},\n        EMPTY_STRING = '',\n        DEFAULT_TRUNCATE_SYMBOL = '...',\n        DEFAULT_SLOP = 10 > maxLength ? maxLength : 10,\n        EXCLUDE_TAGS = ['img', 'br'],   // non-closed tags\n        items = [],                     // stack for saving tags\n        total = 0,                      // record how many characters we traced so far\n        content = EMPTY_STRING,         // truncated text storage\n        KEY_VALUE_REGEX = '([\\\\w|-]+\\\\s*(=\\\\s*\"[^\"]*\")?\\\\s*)*',\n        IS_CLOSE_REGEX = '\\\\s*\\\\/?\\\\s*',\n        CLOSE_REGEX = '\\\\s*\\\\/\\\\s*',\n        SELF_CLOSE_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + CLOSE_REGEX + '>'),\n        HTML_TAG_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n        URL_REGEX = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w\\-]+@([\\w][\\w\\-]+\\.)+[a-zA-Z]{2,3})/g, // Simple regexp\n        IMAGE_TAG_REGEX = new RegExp('<img\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n        WORD_BREAK_REGEX = new RegExp('\\\\W+', 'g'),\n        matches = true,\n        result,\n        index,\n        tail,\n        tag,\n        selfClose;\n\n    /**\n     * Remove image tag\n     *\n     * @private\n     * @method _removeImageTag\n     * @param {String} string not-yet-processed string\n     * @return {String} string without image tags\n     */\n    function _removeImageTag(string) {\n        var match = IMAGE_TAG_REGEX.exec(string),\n            index,\n            len;\n\n        if (!match) {\n            return string;\n        }\n\n        index = match.index;\n        len = match[0].length;\n\n        return string.substring(0, index) + string.substring(index + len);\n    }\n\n    /**\n     * Dump all close tags and append to truncated content while reaching upperbound\n     *\n     * @private\n     * @method _dumpCloseTag\n     * @param {String[]} tags a list of tags which should be closed\n     * @return {String} well-formatted html\n     */\n    function _dumpCloseTag(tags) {\n        var html = '';\n\n        tags.reverse().forEach(function (tag, index) {\n            // dump non-excluded tags only\n            if (-1 === EXCLUDE_TAGS.indexOf(tag)) {\n                html += '</' + tag + '>';\n            }\n        });\n\n        return html;\n    }\n\n    /**\n     * Process tag string to get pure tag name\n     *\n     * @private\n     * @method _getTag\n     * @param {String} string original html\n     * @return {String} tag name\n     */\n    function _getTag(string) {\n        var tail = string.indexOf(' ');\n\n        // TODO:\n        // we have to figure out how to handle non-well-formatted HTML case\n        if (-1 === tail) {\n            tail = string.indexOf('>');\n            if (-1 === tail) {\n                throw new Error('HTML tag is not well-formed : ' + string);\n            }\n        }\n\n        return string.substring(1, tail);\n    }\n\n\n    /**\n     * Get the end position for String#substring()\n     *\n     * If options.truncateLastWord is FALSE, we try to the end position up to\n     * options.slop characters to avoid breaking in the middle of a word.\n     *\n     * @private\n     * @method _getEndPosition\n     * @param {String} string original html\n     * @param {Number} tailPos (optional) provided to avoid extending the slop into trailing HTML tag\n     * @return {Number} maxLength\n     */\n    function _getEndPosition (string, tailPos) {\n        var defaultPos = maxLength - total,\n            position = defaultPos,\n            isShort = defaultPos < options.slop,\n            slopPos = isShort ? defaultPos : options.slop - 1,\n            substr,\n            startSlice = isShort ? 0 : defaultPos - options.slop,\n            endSlice = tailPos || (defaultPos + options.slop),\n            result;\n\n        if (!options.truncateLastWord) {\n\n            substr = string.slice(startSlice, endSlice);\n\n            if (tailPos && substr.length <= tailPos) {\n                position = substr.length;\n            }\n            else {\n                while ((result = WORD_BREAK_REGEX.exec(substr)) !== null) {\n                    // a natural break position before the hard break position\n                    if (result.index < slopPos) {\n                        position = defaultPos - (slopPos - result.index);\n                        // keep seeking closer to the hard break position\n                        // unless a natural break is at position 0\n                        if (result.index === 0 && defaultPos <= 1) break;\n                    }\n                    // a natural break position exactly at the hard break position\n                    else if (result.index === slopPos) {\n                        position = defaultPos;\n                        break; // seek no more\n                    }\n                    // a natural break position after the hard break position\n                    else {\n                        position = defaultPos + (result.index - slopPos);\n                        break;  // seek no more\n                    }\n                }\n            }\n            if (string.charAt(position - 1).match(/\\s$/)) position--;\n        }\n        return position;\n    }\n\n    options = options || EMPTY_OBJECT;\n    options.ellipsis = (undefined !== options.ellipsis) ? options.ellipsis : DEFAULT_TRUNCATE_SYMBOL;\n    options.truncateLastWord = (undefined !== options.truncateLastWord) ? options.truncateLastWord : true;\n    options.slop = (undefined !== options.slop) ? options.slop : DEFAULT_SLOP;\n\n    while (matches) {\n        matches = HTML_TAG_REGEX.exec(string);\n\n        if (!matches) {\n            if (total >= maxLength) { break; }\n\n            matches = URL_REGEX.exec(string);\n            if (!matches || matches.index >= maxLength) {\n                content += string.substring(0, _getEndPosition(string));\n                break;\n            }\n\n            while (matches) {\n                result = matches[0];\n                index = matches.index;\n                content += string.substring(0, (index + result.length) - total);\n                string = string.substring(index + result.length);\n                matches = URL_REGEX.exec(string);\n            }\n            break;\n        }\n\n        result = matches[0];\n        index = matches.index;\n\n        if (total + index > maxLength) {\n            // exceed given `maxLength`, dump everything to clear stack\n            content += string.substring(0, _getEndPosition(string, index));\n            break;\n        } else {\n            total += index;\n            content += string.substring(0, index);\n        }\n\n        if ('/' === result[1]) {\n            // move out open tag\n            items.pop();\n            selfClose=null;\n        } else {\n            selfClose = SELF_CLOSE_REGEX.exec(result);\n            if (!selfClose) {\n                tag = _getTag(result);\n\n                items.push(tag);\n            }\n        }\n\n        if (selfClose) {\n            content += selfClose[0];\n        } else {\n            content += result;\n        }\n        string = string.substring(index + result.length);\n    }\n\n    if (string.length > maxLength - total && options.ellipsis) {\n        content += options.ellipsis;\n    }\n    content += _dumpCloseTag(items);\n\n    if (!options.keepImageTag) {\n        content = _removeImageTag(content);\n    }\n\n    return content;\n}\n\nmodule.exports = truncate;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/html-truncate/lib/truncate.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}}],"sources":{"node_modules/html-truncate/lib/truncate.js":"/**\n * Truncate HTML string and keep tag safe.\n *\n * @method truncate\n * @param {String} string string needs to be truncated\n * @param {Number} maxLength length of truncated string\n * @param {Object} options (optional)\n * @param {Boolean} [options.keepImageTag] flag to specify if keep image tag, false by default\n * @param {Boolean} [options.truncateLastWord] truncates last word, true by default\n * @param {Number} [options.slop] tolerance when options.truncateLastWord is false before we give up and just truncate at the maxLength position, 10 by default (but not greater than maxLength)\n * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default\n * @return {String} truncated string\n */\nfunction truncate(string, maxLength, options) {\n    var EMPTY_OBJECT = {},\n        EMPTY_STRING = '',\n        DEFAULT_TRUNCATE_SYMBOL = '...',\n        DEFAULT_SLOP = 10 > maxLength ? maxLength : 10,\n        EXCLUDE_TAGS = ['img', 'br'],   // non-closed tags\n        items = [],                     // stack for saving tags\n        total = 0,                      // record how many characters we traced so far\n        content = EMPTY_STRING,         // truncated text storage\n        KEY_VALUE_REGEX = '([\\\\w|-]+\\\\s*(=\\\\s*\"[^\"]*\")?\\\\s*)*',\n        IS_CLOSE_REGEX = '\\\\s*\\\\/?\\\\s*',\n        CLOSE_REGEX = '\\\\s*\\\\/\\\\s*',\n        SELF_CLOSE_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + CLOSE_REGEX + '>'),\n        HTML_TAG_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n        URL_REGEX = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w\\-]+@([\\w][\\w\\-]+\\.)+[a-zA-Z]{2,3})/g, // Simple regexp\n        IMAGE_TAG_REGEX = new RegExp('<img\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n        WORD_BREAK_REGEX = new RegExp('\\\\W+', 'g'),\n        matches = true,\n        result,\n        index,\n        tail,\n        tag,\n        selfClose;\n\n    /**\n     * Remove image tag\n     *\n     * @private\n     * @method _removeImageTag\n     * @param {String} string not-yet-processed string\n     * @return {String} string without image tags\n     */\n    function _removeImageTag(string) {\n        var match = IMAGE_TAG_REGEX.exec(string),\n            index,\n            len;\n\n        if (!match) {\n            return string;\n        }\n\n        index = match.index;\n        len = match[0].length;\n\n        return string.substring(0, index) + string.substring(index + len);\n    }\n\n    /**\n     * Dump all close tags and append to truncated content while reaching upperbound\n     *\n     * @private\n     * @method _dumpCloseTag\n     * @param {String[]} tags a list of tags which should be closed\n     * @return {String} well-formatted html\n     */\n    function _dumpCloseTag(tags) {\n        var html = '';\n\n        tags.reverse().forEach(function (tag, index) {\n            // dump non-excluded tags only\n            if (-1 === EXCLUDE_TAGS.indexOf(tag)) {\n                html += '</' + tag + '>';\n            }\n        });\n\n        return html;\n    }\n\n    /**\n     * Process tag string to get pure tag name\n     *\n     * @private\n     * @method _getTag\n     * @param {String} string original html\n     * @return {String} tag name\n     */\n    function _getTag(string) {\n        var tail = string.indexOf(' ');\n\n        // TODO:\n        // we have to figure out how to handle non-well-formatted HTML case\n        if (-1 === tail) {\n            tail = string.indexOf('>');\n            if (-1 === tail) {\n                throw new Error('HTML tag is not well-formed : ' + string);\n            }\n        }\n\n        return string.substring(1, tail);\n    }\n\n\n    /**\n     * Get the end position for String#substring()\n     *\n     * If options.truncateLastWord is FALSE, we try to the end position up to\n     * options.slop characters to avoid breaking in the middle of a word.\n     *\n     * @private\n     * @method _getEndPosition\n     * @param {String} string original html\n     * @param {Number} tailPos (optional) provided to avoid extending the slop into trailing HTML tag\n     * @return {Number} maxLength\n     */\n    function _getEndPosition (string, tailPos) {\n        var defaultPos = maxLength - total,\n            position = defaultPos,\n            isShort = defaultPos < options.slop,\n            slopPos = isShort ? defaultPos : options.slop - 1,\n            substr,\n            startSlice = isShort ? 0 : defaultPos - options.slop,\n            endSlice = tailPos || (defaultPos + options.slop),\n            result;\n\n        if (!options.truncateLastWord) {\n\n            substr = string.slice(startSlice, endSlice);\n\n            if (tailPos && substr.length <= tailPos) {\n                position = substr.length;\n            }\n            else {\n                while ((result = WORD_BREAK_REGEX.exec(substr)) !== null) {\n                    // a natural break position before the hard break position\n                    if (result.index < slopPos) {\n                        position = defaultPos - (slopPos - result.index);\n                        // keep seeking closer to the hard break position\n                        // unless a natural break is at position 0\n                        if (result.index === 0 && defaultPos <= 1) break;\n                    }\n                    // a natural break position exactly at the hard break position\n                    else if (result.index === slopPos) {\n                        position = defaultPos;\n                        break; // seek no more\n                    }\n                    // a natural break position after the hard break position\n                    else {\n                        position = defaultPos + (result.index - slopPos);\n                        break;  // seek no more\n                    }\n                }\n            }\n            if (string.charAt(position - 1).match(/\\s$/)) position--;\n        }\n        return position;\n    }\n\n    options = options || EMPTY_OBJECT;\n    options.ellipsis = (undefined !== options.ellipsis) ? options.ellipsis : DEFAULT_TRUNCATE_SYMBOL;\n    options.truncateLastWord = (undefined !== options.truncateLastWord) ? options.truncateLastWord : true;\n    options.slop = (undefined !== options.slop) ? options.slop : DEFAULT_SLOP;\n\n    while (matches) {\n        matches = HTML_TAG_REGEX.exec(string);\n\n        if (!matches) {\n            if (total >= maxLength) { break; }\n\n            matches = URL_REGEX.exec(string);\n            if (!matches || matches.index >= maxLength) {\n                content += string.substring(0, _getEndPosition(string));\n                break;\n            }\n\n            while (matches) {\n                result = matches[0];\n                index = matches.index;\n                content += string.substring(0, (index + result.length) - total);\n                string = string.substring(index + result.length);\n                matches = URL_REGEX.exec(string);\n            }\n            break;\n        }\n\n        result = matches[0];\n        index = matches.index;\n\n        if (total + index > maxLength) {\n            // exceed given `maxLength`, dump everything to clear stack\n            content += string.substring(0, _getEndPosition(string, index));\n            break;\n        } else {\n            total += index;\n            content += string.substring(0, index);\n        }\n\n        if ('/' === result[1]) {\n            // move out open tag\n            items.pop();\n            selfClose=null;\n        } else {\n            selfClose = SELF_CLOSE_REGEX.exec(result);\n            if (!selfClose) {\n                tag = _getTag(result);\n\n                items.push(tag);\n            }\n        }\n\n        if (selfClose) {\n            content += selfClose[0];\n        } else {\n            content += result;\n        }\n        string = string.substring(index + result.length);\n    }\n\n    if (string.length > maxLength - total && options.ellipsis) {\n        content += options.ellipsis;\n    }\n    content += _dumpCloseTag(items);\n\n    if (!options.keepImageTag) {\n        content = _removeImageTag(content);\n    }\n\n    return content;\n}\n\nmodule.exports = truncate;\n"},"lineCount":234}},"error":null,"hash":"b068b3eac65c01f959be948dff8ee7ef","cacheData":{"env":{}}}